name: Release and Publish

on:
    push:
        tags:
            - 'v*.*.*'
    workflow_dispatch:
        inputs:
            version_type:
                description: 'Version bump type'
                required: true
                default: 'patch'
                type: choice
                options:
                    - patch
                    - minor
                    - major
                    - prerelease

permissions:
  contents: write
  packages: write

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'
            - run: npm ci
            - run: npm run lint
            - run: npm run test:core

    release:
        needs: test
        runs-on: ubuntu-latest
        if: github.event_name == 'workflow_dispatch'
        steps:
            - uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  fetch-depth: 0
            - uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'
            - run: npm ci
            - name: Configure Git
              run: |
                  git config --global user.name 'github-actions[bot]'
                  git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            - name: Version bump and create tag
              run: |
                  case "${{ github.event.inputs.version_type }}" in
                    "patch")
                      npm version patch --no-git-tag-version
                      ;;
                    "minor")
                      npm version minor --no-git-tag-version
                      ;;
                    "major")
                      npm version major --no-git-tag-version
                      ;;
                    "prerelease")
                      npm version prerelease --no-git-tag-version
                      ;;
                  esac
                  
                  # Get the new version
                  NEW_VERSION=$(node -p "require('./package.json').version")
                  
                  # Commit and tag
                  git add package.json package-lock.json
                  git commit -m "chore: release v${NEW_VERSION}"
                  git tag "v${NEW_VERSION}"
                  git push origin main
                  git push origin "v${NEW_VERSION}"
            - name: Publish to npm
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    publish-on-tag:
        needs: test
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/v')
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '18'
                  registry-url: 'https://registry.npmjs.org'
            - run: npm ci
            - run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: Create GitHub Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: |
                      ## Changes in this Release

                      See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref }}/CHANGELOG.md) for detailed changes.

                      ## Installation

                      ```bash
                      npm install @alteriom/repository-metadata-manager@${{ github.ref_name }}
                      ```
                  draft: false
                  prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
